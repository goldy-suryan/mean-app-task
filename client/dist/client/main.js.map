{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/login.service.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/environments/environment.prod.ts","./src/app/components/login/state/login.enum.ts","./src/app/components/login/state/login.selector.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/components/login/state/login.reducer.ts","./src/app/interceptors/http.interceptor.ts","./src/app/components/login/state/login.action.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: 'http://localhost:3001/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  login(payload) {\n    return this.http.post(`${environment.url}login`, payload);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n\n\n  ngOnInit() {\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { AuthService } from '../services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(route, state: RouterStateSnapshot) {\n    if (this.authService.isLoggedIn())  return true;\n    \n    this.router.navigate(['/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { add_user, auth_user } from './state/login.action';\nimport { getUser } from './state/login.selector';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../services/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  invalidMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private store: Store<any>,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit(): void {\n    this.loginFormInit();\n  }\n\n  loginFormInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]]\n    })\n  }\n\n  get username() {\n    return this.loginForm.get('username');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  login() {\n    if (this.loginForm.invalid) {\n      this.invalidMessage = 'Please fill the form correctly';\n      return;\n    }\n    this.loginService.login(this.loginForm.value).subscribe(data => {\n      if (data && data['success']) {\n        this.store.dispatch(add_user(this.loginForm.value));\n        localStorage.setItem('token', data['token']);\n        this.router.navigate(['/dashboard']);\n      }\n    }, err => {\n      this.invalidMessage = err.error.result;\n    }\n    )\n  }\n}\n","<h2 class=\"text-center\">Login</h2>\n<form [formGroup]=\"loginForm\">\n    <span class=\"text-center text-danger\" *ngIf=\"invalidMessage || loginForm.invalid\">{{invalidMessage}}</span>\n    <div class=\"form-group\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" name=\"username\" placeholder=\"username\" required>\n    </div>\n    <div class=\" text-danger\"\n        *ngIf=\"username && username.invalid && (username.dirty || username.touched)\">\n        <span *ngIf=\"username.hasError('required')\">Username is required</span>\n        <span *ngIf=\"username.hasError('pattern')\">Email not valid</span>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" name=\"password\" placeholder=\"password\" required>\n    </div>\n    <div class=\" text-danger\"\n        *ngIf=\"password && password.invalid && (password.dirty || password.touched)\">\n        <span *ngIf=\"password.hasError('required')\">password is required</span>\n        <span *ngIf=\"password.hasError('minlength')\">password must be of atleast 6 characters</span>\n        <span *ngIf=\"password.hasError('maxlength')\">password must not be greater than 20 characters</span>\n    </div>\n    <input type=\"button\" class=\"btn btn-primary\" value=\"Log In\" (click)=\"login()\"/>\n</form>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { loginReducer } from './components/login/state/login.reducer';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './interceptors/http.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot({user: loginReducer}),\n    EffectsModule.forRoot([])\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const environment = {\n  production: true,\n  url: 'https://pactch-infotech.herokuapp.com'\n};\n","export enum ELogin {\n    ADD_USER = 'ADD_USER',\n    AUTH = 'AUTH',\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { ILoginState } from \"./login.reducer\";\n\nexport const Login_State = 'user';\n\nconst getUserState = createFeatureSelector<ILoginState>(Login_State);\n\nexport const getUser = createSelector(getUserState, (state) => state.user);\n\nexport const getUserAuthentication = createSelector(getUserState, (state) => state.isAuthenticated);","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { getUserAuthentication } from '../login/state/login.selector';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  isAuthenticated;\n\n  constructor(private store: Store,\n              private authService: AuthService\n              ) { }\n\n  ngOnInit(): void {\n    this.store.pipe(select(getUserAuthentication)).subscribe(isAuthenticated => {\n      this.isAuthenticated = isAuthenticated\n      console.log(isAuthenticated)\n    })\n  }\n\n  logout() {\n    this.authService.logOut();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\">Example</a>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\" *ngIf=\"isAuthenticated\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" (click)=\"logout()\">Logout</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport jwt_decode from \"jwt-decode\";\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { auth_user } from '../components/login/state/login.action';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthService {\n\n    constructor(private router: Router,\n                private store: Store) {}\n\n    isLoggedIn() {\n        let token = localStorage.getItem(\"token\");\n        if (!token) return false;\n        if(token) {\n            if (Date.now() >= <any>jwt_decode(token)) {\n                return false;\n            }\n            this.store.dispatch(auth_user({isAuthenticated: true}));\n            return true;\n        }\n        return false;\n    }\n\n    logOut() {\n        this.store.dispatch(auth_user({isAuthenticated: false}));\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        this.router.navigate(['/'])\n    }\n}","import { state } from \"@angular/animations\"\nimport { createReducer, on } from \"@ngrx/store\"\nimport { add_user, ILogin, auth_user } from \"./login.action\"\n\n\nexport interface ILoginState {\n    user: ILogin;\n    isAuthenticated: boolean;\n}\n\nconst initialState = {\n    user: {},\n    isAuthenticated: false\n}\n\nconst _loginReducer = createReducer(initialState,\n    on(add_user, (state, { username, password }) => {\n        return {\n            ...state,\n            user: { ...state.user, username, password }\n        }\n    }),\n    on(auth_user, (state, action) => {\n      return {\n          ...state,\n          isAuthenticated: action.isAuthenticated\n      }  \n    })\n)\n\nexport function loginReducer(state, action) {\n    return _loginReducer(state, action)\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        let authHeader;\n        if (localStorage.getItem('token')) {\n            authHeader = `Bearer ${localStorage.getItem('token')}`;\n        } else {\n            return next.handle(req);\n        }\n\n        const authReq = req.clone({\n            headers: req.headers.set(\n                'Authorization',\n                authHeader\n            )\n        });\n\n        return next.handle(authReq);\n    }\n}","import { createAction, props } from \"@ngrx/store\";\nimport { ELogin } from \"./login.enum\";\n\nexport interface ILogin {\n    username: string;\n    password: string;\n}\n\nexport const add_user = createAction(ELogin.ADD_USER, props<ILogin>())\n\n\nexport const auth_user = createAction(ELogin.AUTH, props<any>())","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [AuthGuard]  }, \n  { path: \"login\", component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}